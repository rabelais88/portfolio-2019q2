{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/gamecoach/codes/portfolio-2019q2/www/pages/login.js\";\nimport React from \"react\";\nimport Helmet from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport { Cookies } from 'react-cookie';\nimport { useEffect, Fragment } from 'react';\nimport Router, { withRouter } from 'next/router'; // Router is for server, withRouter is for client\n\nimport { connect } from 'react-redux';\nimport { TextField } from 'formik-material-ui';\nimport Button from '@material-ui/core/Button'; // import withStyles from '@material-ui/core/styles/withStyles';\n\nimport { asyncLogin } from '../actions/user';\nimport Menu from '../components/menu';\nvar cookies = new Cookies();\nvar validationLogin = Yup.object().shape({\n  email: Yup.string().trim().email().required('Required'),\n  password: Yup.string().trim().min(3).required('Required')\n});\n\nvar FormLogin = function FormLogin(props) {\n  var values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      isSubmitting = props.isSubmitting,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleSubmit = props.handleSubmit,\n      handleReset = props.handleReset;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    label: \"email\",\n    component: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    label: \"password\",\n    component: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleReset,\n    disabled: !dirty || isSubmitting,\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(Button, {\n    type: \"submit\",\n    disabled: isSubmitting,\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nvar Login = function Login(props) {\n  var user = props.user,\n      dispatch = props.dispatch,\n      router = props.router;\n  useEffect(function () {\n    if (user.token) router.push('/admin');\n  }, [user]);\n\n  var submitLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var email, password, setSubmitting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref.email, password = _ref.password;\n              setSubmitting = _ref2.setSubmitting;\n              dispatch(asyncLogin(email, password));\n              setSubmitting(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitLogin(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    title: \"Login | Hello next.js!\",\n    meta: [{\n      property: 'og:title',\n      content: 'Login'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), \"Please Log in\", React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: submitLogin,\n    validationSchema: validationLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, FormLogin));\n};\n\nLogin.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ctx) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = cookies.get('token');\n\n            if (!token) {\n              _context2.next = 5;\n              break;\n            }\n\n            if (ctx.res) {\n              ctx.res.writeHead(302, {\n                Location: '/admin'\n              });\n              ctx.res.end();\n            } else {\n              Router.push('/admin');\n            }\n\n            _context2.next = 6;\n            break;\n\n          case 5:\n            return _context2.abrupt(\"return\", {});\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(withRouter(Login));","map":{"version":3,"sources":["/Users/gamecoach/codes/portfolio-2019q2/www/pages/login.js"],"names":["Helmet","Yup","Formik","Field","Cookies","useEffect","Fragment","Router","withRouter","connect","TextField","Button","asyncLogin","Menu","cookies","validationLogin","object","shape","email","string","trim","required","password","min","FormLogin","props","values","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","Login","user","dispatch","router","token","push","submitLogin","setSubmitting","property","content","getInitialProps","ctx","get","res","writeHead","Location","end","mapStateToProps","state"],"mappings":"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","sourcesContent":["import Helmet from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport { Cookies } from 'react-cookie';\nimport { useEffect, Fragment } from 'react';\nimport Router, { withRouter } from 'next/router'; // Router is for server, withRouter is for client\nimport { connect } from 'react-redux';\nimport { TextField } from 'formik-material-ui';\nimport Button from '@material-ui/core/Button';\n// import withStyles from '@material-ui/core/styles/withStyles';\n\nimport { asyncLogin } from '../actions/user';\nimport Menu from '../components/menu';\n\nconst cookies = new Cookies();\n\nconst validationLogin = Yup.object().shape({\n  email: Yup.string()\n    .trim()\n    .email()\n    .required('Required'),\n  password: Yup.string()\n    .trim()\n    .min(3)\n    .required('Required'),\n});\n\nconst FormLogin = props => {\n  const {\n    values,\n    touched,\n    errors,\n    dirty, // when valiation fails\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleReset,\n  } = props;\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        {/* <label htmlFor=\"email\" style={{ display: 'block' }}>\n          Email\n        </label>\n        <input\n          id=\"email\"\n          placeholder=\"Enter your email\"\n          type=\"text\"\n          value={values.email}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          className={\n            errors.email && touched.email ? 'text-input error' : 'text-input'\n          }\n        />\n        {errors.email && touched.email && (\n          <div className=\"input-feedback\">{errors.email}</div>\n        )}\n        <label htmlFor=\"password\" style={{ display: 'block' }}>\n          password\n        </label>\n        <input\n          id=\"password\"\n          placeholder=\"Enter your password\"\n          type=\"password\"\n          value={values.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          className={\n            errors.password && touched.password\n              ? 'text-input error'\n              : 'text-input'\n          }\n        /> */}\n        <Field name=\"email\" type=\"text\" label=\"email\" component={TextField} />\n        <Field name=\"password\" type=\"password\" label=\"password\" component={TextField} />\n        <Button\n          onClick={handleReset}\n          disabled={!dirty || isSubmitting}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Reset\n        </Button>\n        <Button type=\"submit\" disabled={isSubmitting} color=\"primary\" variant=\"contained\">\n          Submit\n        </Button>\n        {/* {JSON.stringify(props)} */}\n      </form>\n    </Fragment>\n  );\n};\n\nconst Login = props => {\n  const { user, dispatch, router } = props;\n  useEffect(() => {\n    if (user.token) router.push('/admin');\n  }, [user]);\n  const submitLogin = async ({ email, password }, { setSubmitting }) => {\n    dispatch(asyncLogin(email, password));\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      <Helmet\n        title=\"Login | Hello next.js!\"\n        meta={[{ property: 'og:title', content: 'Login' }]}\n      />\n      <Menu />\n      Please Log in\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={submitLogin}\n        validationSchema={validationLogin}\n      >\n        {FormLogin}\n      </Formik>\n    </div>\n  );\n};\n\nLogin.getInitialProps = async ctx => {\n  const token = cookies.get('token');\n  if (token) {\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: '/admin',\n      });\n      ctx.res.end();\n    } else {\n      Router.push('/admin');\n    }\n  } else {\n    return {};\n  }\n};\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}