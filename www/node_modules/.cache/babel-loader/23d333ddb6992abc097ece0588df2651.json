{"ast":null,"code":"import { Cookies } from 'react-cookie';\nimport { toast } from 'react-toastify';\nimport Api from '../utils/Api';\nexport var SET_USER = 'SET_USER';\nexport var LOGOUT = 'LOGOUT';\nexport var LOGIN = 'LOGIN';\nvar cookies = new Cookies();\nexport var setUser = function setUser(userInfo) {\n  return {\n    type: SET_USER,\n    userInfo: userInfo\n  };\n};\nexport var logout = function logout() {\n  cookies.remove('token');\n  return {\n    type: LOGOUT\n  }; // this will empty setUser(null);\n};\nexport var asyncLogin = function asyncLogin(email, password) {\n  return function (dispatch, getState) {\n    var errorHandler = function errorHandler(err) {\n      if (err.response.status === 401) {\n        toast.error('wrong email or password.');\n        dispatch(logout());\n      }\n    };\n\n    var api = new Api().onError(errorHandler).setBasicAuth({\n      email: email,\n      password: password\n    });\n    console.log('login request');\n    api.loginAdmin().then(function (res) {\n      var token = res.token,\n          username = res.username;\n      toast.success('logged in!'); // console.log('login succeed', token, username);\n\n      cookies.set('token', token);\n      dispatch(setUser({\n        email: email,\n        token: token,\n        username: username\n      }));\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/gamecoach/codes/portfolio-2019q2/www/actions/user.js"],"names":["Cookies","toast","Api","SET_USER","LOGOUT","LOGIN","cookies","setUser","userInfo","type","logout","remove","asyncLogin","email","password","dispatch","getState","errorHandler","err","response","status","error","api","onError","setBasicAuth","console","log","loginAdmin","then","res","token","username","success","set","catch"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,KAAK,GAAG,OAAd;AAEP,IAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;AAEA,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA,SAAK;AAClCC,IAAAA,IAAI,EAAEN,QAD4B;AAElCK,IAAAA,QAAQ,EAARA;AAFkC,GAAL;AAAA,CAAxB;AAKP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BJ,EAAAA,OAAO,CAACK,MAAR,CAAe,OAAf;AACA,SAAO;AAAEF,IAAAA,IAAI,EAAEL;AAAR,GAAP,CAF0B,CAED;AAC1B,CAHM;AAKP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAqB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACrE,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,GAAG,EAAI;AAC1B,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BnB,QAAAA,KAAK,CAACoB,KAAN,CAAY,0BAAZ;AACAN,QAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACD;AACF,KALD;;AAMA,QAAMY,GAAG,GAAG,IAAIpB,GAAJ,GAAUqB,OAAV,CAAkBN,YAAlB,EAAgCO,YAAhC,CAA6C;AAAEX,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAA7C,CAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAJ,IAAAA,GAAG,CAACK,UAAJ,GAAiBC,IAAjB,CAAsB,UAAAC,GAAG,EAAI;AAAA,UACnBC,KADmB,GACCD,GADD,CACnBC,KADmB;AAAA,UACZC,QADY,GACCF,GADD,CACZE,QADY;AAE3B9B,MAAAA,KAAK,CAAC+B,OAAN,CAAc,YAAd,EAF2B,CAG3B;;AACA1B,MAAAA,OAAO,CAAC2B,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAf,MAAAA,QAAQ,CAACR,OAAO,CAAC;AAAEM,QAAAA,KAAK,EAALA,KAAF;AAASiB,QAAAA,KAAK,EAALA,KAAT;AAAgBC,QAAAA,QAAQ,EAARA;AAAhB,OAAD,CAAR,CAAR;AACD,KAND,EAMGG,KANH,CAMS,UAAAhB,GAAG,EAAI;AAAEO,MAAAA,OAAO,CAACJ,KAAR,CAAcH,GAAd;AAAoB,KANtC;AAOD,GAhByB;AAAA,CAAnB","sourcesContent":["import { Cookies } from 'react-cookie';\nimport { toast } from 'react-toastify';\n\nimport Api from '../utils/Api';\n\nexport const SET_USER = 'SET_USER';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN = 'LOGIN';\n\nconst cookies = new Cookies();\n\nexport const setUser = userInfo => ({\n  type: SET_USER,\n  userInfo,\n});\n\nexport const logout = () => {\n  cookies.remove('token');\n  return { type: LOGOUT }; // this will empty setUser(null);\n};\n\nexport const asyncLogin = (email, password) => (dispatch, getState) => {\n  const errorHandler = err => {\n    if (err.response.status === 401) {\n      toast.error('wrong email or password.');\n      dispatch(logout());\n    }\n  };\n  const api = new Api().onError(errorHandler).setBasicAuth({ email, password });\n  console.log('login request');\n  api.loginAdmin().then(res => {\n    const { token, username } = res;\n    toast.success('logged in!');\n    // console.log('login succeed', token, username);\n    cookies.set('token', token);\n    dispatch(setUser({ email, token, username }));\n  }).catch(err => { console.error(err) });\n};\n"]},"metadata":{},"sourceType":"module"}