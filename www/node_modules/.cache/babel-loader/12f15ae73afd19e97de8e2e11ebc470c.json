{"ast":null,"code":"var _jsxFileName = \"/Users/gamecoach/codes/portfolio-2019q2/www/components/editIndex.js\";\nimport React from \"react\";\nimport * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport { withRouter } from 'next/router';\nimport { TextField } from 'formik-material-ui';\nimport Button from '@material-ui/core/Button';\nimport { asyncGetIndex, asyncSetIndex } from '../actions/info';\n\nvar EditIndex = function EditIndex(props) {\n  var info = props.info,\n      router = props.router,\n      dispatch = props.dispatch;\n\n  var markdown = _get(info, 'indexMarkdown');\n\n  useEffect(function () {\n    dispatch(asyncGetIndex(router));\n  }, []);\n\n  if (!markdown) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"loading for index page editing...\"));\n  }\n\n  var submitIndex = function submitIndex(_ref) {\n    var indexMarkdown = _ref.indexMarkdown;\n    console.log(indexMarkdown);\n    dispatch(asyncSetIndex(router, indexMarkdown, 'successfully updated index')); // dispatch(setIndex(values.indexMarkdown));\n  };\n\n  return React.createElement(Formik, {\n    onSubmit: submitIndex,\n    initialValues: {\n      indexMarkdown: markdown\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"page--admin-index--form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"editing index page\"), React.createElement(Field, {\n      name: \"indexMarkdown\",\n      label: \"markdown\",\n      component: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"markdown preview\"), React.createElement(ReactMarkdown, {\n      source: values.indexMarkdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"submit and modify\"));\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(withRouter(EditIndex));","map":{"version":3,"sources":["/Users/gamecoach/codes/portfolio-2019q2/www/components/editIndex.js"],"names":["Yup","Formik","Field","useEffect","useState","ReactMarkdown","connect","_get","withRouter","TextField","Button","asyncGetIndex","asyncSetIndex","EditIndex","props","info","router","dispatch","markdown","submitIndex","indexMarkdown","console","log","handleSubmit","values","mapStateToProps","state"],"mappings":";;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iBAA7C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MACjBC,IADiB,GACUD,KADV,CACjBC,IADiB;AAAA,MACXC,MADW,GACUF,KADV,CACXE,MADW;AAAA,MACHC,QADG,GACUH,KADV,CACHG,QADG;;AAEzB,MAAMC,QAAQ,GAAGX,IAAI,CAACQ,IAAD,EAAO,eAAP,CAArB;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACN,aAAa,CAACK,MAAD,CAAd,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAI,CAACE,QAAL,EAAe;AACb,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CADF;AAKD;;AAED,MAAMC,WAAW,GAAG,SAAdA,WAAc,OAAuB;AAAA,QAApBC,aAAoB,QAApBA,aAAoB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAH,IAAAA,QAAQ,CAACL,aAAa,CAACI,MAAD,EAASI,aAAT,EAAwB,4BAAxB,CAAd,CAAR,CAFyC,CAGzC;AACD,GAJD;;AAMA,SACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAED,WAAlB;AAA+B,IAAA,aAAa,EAAE;AAAEC,MAAAA,aAAa,EAAEF;AAAjB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGK,YAAH,SAAGA,YAAH;AAAA,QAAiBC,MAAjB,SAAiBA,MAAjB;AAAA,WACC;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAA8B,MAAA,SAAS,EAAC,yBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,KAAK,EAAC,UAAlC;AAA6C,MAAA,SAAS,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAEC,MAAM,CAACJ,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAsC,MAAA,OAAO,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,CADD;AAAA,GADH,CADF;AAaD,CAjCD;;AAkCA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAA7B;;AACA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,UAAU,CAACK,SAAD,CAAnC,CAAf","sourcesContent":["import * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport { withRouter } from 'next/router';\nimport { TextField } from 'formik-material-ui';\nimport Button from '@material-ui/core/Button';\n\nimport { asyncGetIndex, asyncSetIndex } from '../actions/info';\n\nconst EditIndex = props => {\n  const { info, router, dispatch } = props;\n  const markdown = _get(info, 'indexMarkdown');\n  useEffect(() => {\n    dispatch(asyncGetIndex(router));\n  }, []);\n  if (!markdown) {\n    return (\n      <div>\n        <h1>loading for index page editing...</h1>\n      </div>\n    );\n  }\n\n  const submitIndex = ({ indexMarkdown }) => {\n    console.log(indexMarkdown);\n    dispatch(asyncSetIndex(router, indexMarkdown, 'successfully updated index'));\n    // dispatch(setIndex(values.indexMarkdown));\n  };\n\n  return (\n    <Formik onSubmit={submitIndex} initialValues={{ indexMarkdown: markdown }}>\n      {({ handleSubmit, values }) => (\n        <form onSubmit={handleSubmit} className=\"page--admin-index--form\">\n          <h1>editing index page</h1>\n          <Field name=\"indexMarkdown\" label=\"markdown\" component=\"textarea\" />\n          <h2>markdown preview</h2>\n          <ReactMarkdown source={values.indexMarkdown} />\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">submit and modify</Button>\n        </form>\n      )}\n    </Formik>\n  );\n};\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(withRouter(EditIndex));\n"]},"metadata":{},"sourceType":"module"}