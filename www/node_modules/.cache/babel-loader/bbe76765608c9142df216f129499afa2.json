{"ast":null,"code":"var _jsxFileName = \"/Users/gamecoach/codes/portfolio-2019q2/www/components/fileUpload.js\";\nimport React from \"react\";\nimport { useEffect } from 'react';\nimport _get from 'lodash/get';\n\nfunction FileUpload(props) {\n  var name = props.name,\n      form = props.form;\n  useEffect(function () {\n    var imgTag = document.getElementById(\"image-\".concat(name));\n\n    var loadedImg = _get(form, \"values.\".concat(name));\n\n    if (loadedImg && loadedImg !== '') {\n      imgTag.src = loadedImg;\n    }\n  }, []); // on mount\n\n  var handleChange = function handleChange(e) {\n    var file = e.currentTarget.files[0];\n\n    if (!file) {\n      return null;\n    } // when the file is not chosen, just bail out\n\n\n    var reader = new FileReader();\n    var imgTag = document.getElementById(\"image-\".concat(name));\n    imgTag.title = file.name;\n\n    reader.onload = function (event) {\n      imgTag.src = event.target.result;\n    };\n\n    reader.readAsDataURL(file);\n    form.setFieldValue(name, file);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"image-uploader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: function onChange(o) {\n      return handleChange(o);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: \"\",\n    alt: \"\",\n    id: \"image-\".concat(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/gamecoach/codes/portfolio-2019q2/www/components/fileUpload.js"],"names":["useEffect","_get","FileUpload","props","name","form","imgTag","document","getElementById","loadedImg","src","handleChange","e","file","currentTarget","files","reader","FileReader","title","onload","event","target","result","readAsDataURL","setFieldValue","o"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,MACjBC,IADiB,GACFD,KADE,CACjBC,IADiB;AAAA,MACXC,IADW,GACFF,KADE,CACXE,IADW;AAGzBL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,MAAM,GAAGC,QAAQ,CAACC,cAAT,iBAAiCJ,IAAjC,EAAf;;AACA,QAAMK,SAAS,GAAGR,IAAI,CAACI,IAAD,mBAAiBD,IAAjB,EAAtB;;AACA,QAAIK,SAAS,IAAIA,SAAS,KAAK,EAA/B,EAAmC;AACjCH,MAAAA,MAAM,CAACI,GAAP,GAAaD,SAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT,CAHyB,CASjB;;AAER,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxB,QAAMC,IAAI,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAb;;AACA,QAAI,CAACF,IAAL,EAAW;AACT,aAAO,IAAP;AACD,KAJuB,CAItB;;;AACF,QAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,QAAMX,MAAM,GAAGC,QAAQ,CAACC,cAAT,iBAAiCJ,IAAjC,EAAf;AACAE,IAAAA,MAAM,CAACY,KAAP,GAAeL,IAAI,CAACT,IAApB;;AACAY,IAAAA,MAAM,CAACG,MAAP,GAAgB,UAACC,KAAD,EAAW;AACzBd,MAAAA,MAAM,CAACI,GAAP,GAAaU,KAAK,CAACC,MAAN,CAAaC,MAA1B;AACD,KAFD;;AAGAN,IAAAA,MAAM,CAACO,aAAP,CAAqBV,IAArB;AACAR,IAAAA,IAAI,CAACmB,aAAL,CAAmBpB,IAAnB,EAAyBS,IAAzB;AACD,GAbD;;AAeA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,aAAId,YAAY,CAACc,CAAD,CAAhB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAC,EAAhB;AAAmB,IAAA,EAAE,kBAAWrB,IAAX,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,eAAeF,UAAf","sourcesContent":["import { useEffect } from 'react';\nimport _get from 'lodash/get';\n\nfunction FileUpload(props) {\n  const { name, form } = props;\n\n  useEffect(() => {\n    const imgTag = document.getElementById(`image-${name}`);\n    const loadedImg = _get(form, `values.${name}`);\n    if (loadedImg && loadedImg !== '') {\n      imgTag.src = loadedImg;\n    }\n  }, []); // on mount\n\n  const handleChange = e => {\n    const file = e.currentTarget.files[0];\n    if (!file) {\n      return null;\n    } // when the file is not chosen, just bail out\n    const reader = new FileReader();\n    const imgTag = document.getElementById(`image-${name}`);\n    imgTag.title = file.name;\n    reader.onload = (event) => {\n      imgTag.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n    form.setFieldValue(name, file);\n  };\n\n  return (\n    <div className=\"image-uploader\">\n      <input\n        type=\"file\"\n        onChange={o => handleChange(o)}\n      />\n      <img src=\"\" alt=\"\" id={`image-${name}`} />\n    </div>\n  );\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}