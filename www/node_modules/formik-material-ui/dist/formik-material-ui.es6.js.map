{"version":3,"file":"formik-material-ui.es6.js","sources":["../src/TextField.tsx","../src/Switch.tsx","../src/Checkbox.tsx","../src/CheckboxWithLabel.tsx","../src/Select.tsx","../src/SimpleFileUpload.tsx","../src/RadioGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core/TextField';\nimport { FieldProps, getIn } from 'formik';\nimport { Omit } from './types';\n\nexport interface TextFieldProps\n  extends FieldProps,\n    Omit<MuiTextFieldProps, 'error' | 'name' | 'onChange' | 'value'> {}\n\nexport const fieldToTextField = ({\n  field,\n  form,\n  variant,\n  disabled = false,\n  ...props\n}: TextFieldProps): MuiTextFieldProps => {\n  const { name } = field;\n  const { touched, errors, isSubmitting } = form;\n\n  const fieldError = getIn(errors, name);\n  const showError = getIn(touched, name) && !!fieldError;\n\n  return {\n    ...props,\n    ...field,\n    // Hack to work around type issue\n    // See: https://github.com/Microsoft/TypeScript/issues/28791\n    variant: variant as any,\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: isSubmitting || disabled,\n  };\n};\n\nexport const TextField: React.ComponentType<TextFieldProps> = ({\n  children,\n  ...props\n}: TextFieldProps) => (\n  <MuiTextField {...fieldToTextField(props)} children={children} />\n);\n\nTextField.displayName = 'FormikMaterialUITextField';\n","import * as React from 'react';\nimport MuiSwitch, {\n  SwitchProps as MuiSwitchProps,\n} from '@material-ui/core/Switch';\nimport { FieldProps } from 'formik';\nimport { Omit } from './types';\n\nexport interface SwitchProps\n  extends FieldProps,\n    Omit<\n      MuiSwitchProps,\n      'form' | 'name' | 'onChange' | 'value' | 'defaultChecked'\n    > {}\n\nexport const fieldToSwitch = ({\n  field,\n  form: { isSubmitting },\n  disabled = false,\n  ...props\n}: SwitchProps): MuiSwitchProps => {\n  return {\n    disabled: isSubmitting || disabled,\n    ...props,\n    ...field,\n    value: field.name,\n    checked: field.value,\n  };\n};\n\nexport const Switch: React.ComponentType<SwitchProps> = (\n  props: SwitchProps\n) => <MuiSwitch {...fieldToSwitch(props)} />;\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n","import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@material-ui/core/Checkbox';\nimport { FieldProps } from 'formik';\nimport { Omit } from './types';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      'form' | 'checked' | 'defaultChecked' | 'name' | 'onChange' | 'value'\n    > {}\n\nexport const fieldToCheckbox = ({\n  field,\n  form: { isSubmitting },\n  disabled = false,\n  ...props\n}: CheckboxProps): MuiCheckboxProps => {\n  return {\n    disabled: isSubmitting || disabled,\n    ...props,\n    ...field,\n    // TODO handle indeterminate\n    checked: field.value ? 'checked' : '',\n    value: field.value ? 'checked' : '',\n  };\n};\n\nexport const Checkbox: React.ComponentType<CheckboxProps> = (\n  props: CheckboxProps\n) => <MuiCheckbox {...fieldToCheckbox(props)} />;\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n","import * as React from 'react';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport FormControlLabel, {\n  FormControlLabelProps as MuiFormControlLabelProps,\n} from '@material-ui/core/FormControlLabel';\n\nimport { CheckboxProps, fieldToCheckbox } from './Checkbox';\nimport { Omit } from './types';\n\n/**\n * Exclude props that are passed directly to the control\n * https://github.com/mui-org/material-ui/blob/v3.1.1/packages/material-ui/src/FormControlLabel/FormControlLabel.js#L71\n */\nexport interface CheckboxWithLabelProps extends CheckboxProps {\n  Label: Omit<\n    MuiFormControlLabelProps,\n    'checked' | 'name' | 'onChange' | 'value' | 'inputRef'\n  >;\n}\n\nexport const CheckboxWithLabel: React.ComponentType<CheckboxWithLabelProps> = ({\n  Label,\n  ...props\n}) => (\n  <FormControlLabel\n    control={<MuiCheckbox {...fieldToCheckbox(props)} />}\n    {...Label}\n  />\n);\n\nCheckboxWithLabel.displayName = 'FormikMaterialUICheckboxWithLabel';\n","import * as React from 'react';\nimport MuiSelect, {\n  SelectProps as MuiSelectProps,\n} from '@material-ui/core/Select';\nimport { FieldProps } from 'formik';\nimport { Omit } from './types';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'value'> {}\n\nexport const fieldToSelect = ({\n  field,\n  form: { isSubmitting },\n  disabled = false,\n  ...props\n}: SelectProps): MuiSelectProps => {\n  return {\n    disabled: isSubmitting || disabled,\n    ...props,\n    ...field,\n  };\n};\n\nexport const Select: React.ComponentType<SelectProps> = (\n  props: SelectProps\n) => <MuiSelect {...fieldToSelect(props)} />;\n\nSelect.displayName = 'FormikMaterialUISelect';\n","import * as React from 'react';\nimport { FieldProps, getIn } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport interface SimpleFileUploadProps extends FieldProps {\n  label: string;\n  disabled?: boolean;\n}\n\nexport const SimpleFileUpload = ({\n  label,\n  field,\n  form: { touched, errors, isSubmitting, setFieldValue },\n  disabled = false,\n}: SimpleFileUploadProps) => {\n  const error = getIn(touched, field.name) && getIn(errors, field.name);\n\n  return (\n    <div>\n      <FormControl>\n        {label && (\n          <InputLabel shrink error={!!error}>\n            {label}\n          </InputLabel>\n        )}\n        <Input\n          error={!!error}\n          inputProps={{\n            type: 'file',\n            disabled: disabled || isSubmitting,\n            name: field.name,\n            onChange: (event: any) => {\n              const file = event.currentTarget.files[0];\n              setFieldValue(field.name, file);\n            },\n          }}\n        />\n        {error && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport MuiRadioGroup, {\n  RadioGroupProps as MuiRadioGroupProps,\n} from '@material-ui/core/RadioGroup';\nimport { FieldProps } from 'formik';\n\nimport { Omit } from './types';\n\nexport interface RadioGroupProps\n  extends Omit<MuiRadioGroupProps, 'name' | 'onChange' | 'value'>,\n    FieldProps {}\n\nexport const fieldToRadioGroup = ({\n  field,\n  // Exclude Form\n  form,\n  ...props\n}: RadioGroupProps): MuiRadioGroupProps => ({\n  ...props,\n  ...field,\n});\n\nexport const RadioGroup: React.ComponentType<RadioGroupProps> = (\n  props: RadioGroupProps\n) => {\n  return <MuiRadioGroup {...fieldToRadioGroup(props)} />;\n};\n\nRadioGroup.displayName = 'FormikMaterialUIRadioGroup';\n"],"names":["React.createElement"],"mappings":"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"}